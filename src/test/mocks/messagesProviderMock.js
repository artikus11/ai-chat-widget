import MessagesProvider from '@js/providers/MessagesProvider';

// –ë–∞–∑–æ–≤—ã–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä—è—Ç—å)
const DEFAULT_TEST_MESSAGES = {
    in: {
        greeting: { text: '–ü—Ä–∏–≤–µ—Ç! –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å?', delay: 600 },
        followup: { text: '–í—ã –≤—Å—ë –µ—â—ë –∑–¥–µ—Å—å?', delay: 15000 },
    },
    out: {
        welcome: { text: 'üí¨ –ü–æ–≥–æ–≤–æ—Ä–∏–º?' },
        followup: { text: '–ù–∞–ø–æ–º–∏–Ω–∞–µ–º –æ —á–∞—Ç–µ' },
        returning: { text: '–†–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞!' },
        reconnect: { text: '–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ' },
        active_return: { text: '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å ‚Äî —á–∞—Ç –æ—Ç–∫—Ä—ã—Ç' },
    },
};

/**
 * –°–æ–∑–¥–∞—ë—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä MessagesProvider —Å –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏.
 *
 * @param {Object} [customMessages] - –ö–∞—Å—Ç–æ–º–Ω—ã–µ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è (–∫–∞–∫ –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ)
 * @param {Object} [baseMessages=DEFAULT_TEST_MESSAGES] - –ë–∞–∑–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å)
 * @returns {MessagesProvider}
 *
 * @example
 * const provider = createMessagesProviderMock({
 *   out: {
 *     welcome: { text: '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!', cooldownHours: 12 }
 *   }
 * });
 */
export function createMessagesProviderMock(customMessages = {}, baseMessages = DEFAULT_TEST_MESSAGES) {
    return new MessagesProvider(customMessages, baseMessages);
}

/**
 * –£–¥–æ–±–Ω–∞—è —É—Ç–∏–ª–∏—Ç–∞: —Å–æ–∑–¥–∞—ë—Ç –ø—Ä–æ–≤–∞–π–¥–µ—Ä —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∫—É–ª–¥–∞—É–Ω–æ–º –¥–ª—è —Ç–∏–ø–∞.
 *
 * @param {string} type - –¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä 'welcome'
 * @param {number|null} cooldownHours - –ó–Ω–∞—á–µ–Ω–∏–µ –∫—É–ª–¥–∞—É–Ω–∞. –ï—Å–ª–∏ null ‚Äî –Ω–µ –∑–∞–¥–∞—ë–º.
 * @param {'in'|'out'} [namespace='out'] - –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –∏–º—ë–Ω
 * @returns {MessagesProvider}
 *
 * @example
 * const provider = mockMessagesWithCooldown('welcome', 48); // 48 —á–∞—Å–æ–≤
 */
export function mockMessagesWithCooldown(type, cooldownHours, namespace = 'out') {
    const custom = { [namespace]: { [type]: {} } };
    if (cooldownHours !== null) {
        custom[namespace][type].cooldownHours = cooldownHours;
    }
    return createMessagesProviderMock(custom);
}

/**
 * –£–¥–æ–±–Ω–∞—è —É—Ç–∏–ª–∏—Ç–∞: —Å–æ–∑–¥–∞—ë—Ç –ø—Ä–æ–≤–∞–π–¥–µ—Ä —Å –æ—Ç–∫–ª—é—á—ë–Ω–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º (disable: true).
 *
 * @param {string} type - –¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {'in'|'out'} [namespace='out'] - –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –∏–º—ë–Ω
 * @returns {MessagesProvider}
 */
export function mockMessagesDisabled(type, namespace = 'out') {
    const custom = {
        [namespace]: {
            [type]: { disable: true },
        },
    };
    return createMessagesProviderMock(custom);
}